{
	"type": "object",
	"constructor": "package",
	"part": {
		"": {
			"facet": "package",
			"type": "string",
			"source": "youni.works/web/client"
		},
		"use": {
			"type": "object",
			"constructor": "type",
			"part": {
				"control": {
					"facet": "package",
					"type": "string",
					"source": "youni.works/base/control"
				}
			}
		},
		"Remote": {
			"type": "object",
			"constructor": "super",
			"part": {
				"": {
					"facet": "super",
					"type": "string",
					"source": "use.control.Service"
				},
				"method": {
					"type": "string",
					"source": "HEAD"
				},
				"url": {
					"type": "string",
					"source": ""
				},
				"process": {
					"type": "function",
					"source": "function(receiver, message) {\r\n\t\t\tlet xhr = this.createRequest(receiver, message);\r\n\r\n\t\t\tlet method = this.getMethod(receiver, message);\r\n\t\t\tlet url = this.getUrl(receiver, message);\r\n\t\t\txhr.open(method, url);\r\n\t\t\t\r\n\t\t\tthis.prepare(xhr);\r\n\t\t\t\r\n\t\t\tlet content = this.getContent(receiver, message);\r\n\t\t\txhr.send(content);\r\n\t\t}"
				},
				"createRequest": {
					"type": "function",
					"source": "function(receiver, message) {\r\n\t\t\tlet xhr = new XMLHttpRequest();\r\n\t\t\txhr.receiver = receiver;\r\n\t\t\txhr.message = message;\r\n\t\t\txhr.onreadystatechange = () => this.monitor(xhr);\r\n\t\t\treturn xhr;\r\n\t\t}"
				},
				"prepare": {
					"type": "function",
					"source": "function(xhr) {\r\n\t\t\tlet header = this.getHeaders(xhr.receiver, xhr.message);\r\n\t\t\tfor (let name in header) {\r\n\t\t\t\tlet value = header[name];\r\n\t\t\t\tvalue && xhr.setRequestHeader(name, value);\r\n\t\t\t}\r\n\t\t}"
				},
				"monitor": {
					"type": "function",
					"source": "function(xhr) {\r\n\t\t\tswitch (xhr.readyState) {\r\n\t\t\t\tcase 0: // UNSENT Client has been created. open() not called yet.\r\n\t\t\t\tcase 1: // OPENED open() has been called.\r\n\t\t\t\tcase 2: // HEADERS_RECEIVED send() has been called, and headers and status are available.\r\n\t\t\t\tcase 3:\t// LOADING Downloading; responseText holds partial data.\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 4: // DONE The operation is complete.\r\n\t\t\t\t\txhr.message.status = xhr.status;\r\n\t\t\t\t\txhr.message.content = xhr.responseText;\r\n\t\t\t\t\tif (typeof xhr.receiver == \"function\") {\r\n\t\t\t\t\t\txhr.receiver(xhr.message);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\txhr.receiver.receive(xhr.message);\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t}"
				},
				"getMethod": {
					"type": "function",
					"source": "function(on, message) {\r\n\t\t\treturn message.request.method || this.method;\r\n\t\t}"
				},
				"getUrl": {
					"type": "function",
					"source": "function(on, message) {\r\n\t\t\tlet requestUrl = message.request.url || \"\";\r\n\t\t\treturn this.url + requestUrl;\r\n\t\t}"
				},
				"getHeaders": {
					"type": "function",
					"source": "function(on, message) {\r\n\t\t\treturn null;\r\n//\t\t\t{\r\n//\t\t\t\t\"Session-Id\": this.session.id\r\n//\t\t\t}\r\n\t\t}"
				},
				"getContent": {
					"type": "function",
					"source": "function(on, message) {\r\n\t\t\treturn message.request.content || null;\r\n\t\t}"
				}
			}
		},
		"FileService": {
			"type": "object",
			"constructor": "super",
			"part": {
				"": {
					"facet": "super",
					"type": "string",
					"source": "Remote"
				},
				"open": {
					"facet": "type",
					"type": "string",
					"source": "use.control.FileService.open"
				},
				"save": {
					"facet": "type",
					"type": "string",
					"source": "use.control.FileService.save"
				}
			}
		}
	}
}