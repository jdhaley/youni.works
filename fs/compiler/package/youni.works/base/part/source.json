{
	"type": "object",
	"part": {
		"": {
			"facet": "package",
			"type": "string",
			"source": "youni.works/base/part"
		},
		"use": {
			"type": "object",
			"part": {
				"signal": {
					"facet": "package",
					"type": "string",
					"source": "youni.works/base/signal"
				}
			},
			"constructor": "type"
		},
		"Sequence": {
			"type": "object",
			"part": {
				"": {
					"facet": "super",
					"type": "string",
					"source": "Object"
				}
			},
			"constructor": "super"
		},
		"Part": {
			"type": "object",
			"part": {
				"": {
					"facet": "super",
					"type": "string",
					"source": "Object"
				},
				"id": {
					"facet": "once",
					"type": "function",
					"source": "() => ++LAST_ID"
				},
				"of": {
					"facet": "type",
					"type": "string",
					"source": "Part"
				},
				"part": {
					"type": "object",
					"part": {},
					"constructor": "type"
				},
				"owner": {
					"facet": "once",
					"type": "function",
					"source": "function() {\r\n\t\t\tif (this.of) return this.of != this && this.of.owner;\r\n\t\t\treturn this;\r\n\t\t}"
				},
				"name": {
					"facet": "once",
					"type": "function",
					"source": "function() {\r\n\t\t\tif (this.of) for (let name in this.of.part) {\r\n\t\t\t\tif (this.part[name] == this) return name;\r\n\t\t\t}\r\n\t\t\treturn \"\";\r\n\t\t}"
				},
				"pathname": {
					"facet": "get",
					"type": "function",
					"source": "function() {\r\n\t\t\tif (this.name) {\r\n\t\t\t\tlet path = this.of && this.of.pathname || \"\";\r\n\t\t\t\treturn path + \"/\" + this.name;\r\n\t\t\t}\r\n\t\t\treturn \"\";\r\n\t\t}"
				},
				"log": {
					"facet": "get",
					"type": "function",
					"source": "function() {\r\n\t\t\treturn this.owner ? this.owner.log : console;\r\n\t\t}"
				},
				"initialize": {
					"type": "function",
					"source": "function(conf) {\r\n\t\t\tif (this.of != this.sys.interfaceOf(this, \"Part\")) {\r\n\t\t\t\tthrow new Error(\"Component is already initialized.\");\r\n\t\t\t}\r\n\t\t\tthis.sys.define(this, \"of\", conf.of, \"const\");\r\n\t\t}"
				}
			},
			"constructor": "super"
		},
		"Component": {
			"type": "object",
			"part": {
				"": {
					"facet": "super",
					"type": "string",
					"source": "Part"
				},
				"controller": {
					"facet": "type",
					"type": "string",
					"source": "use.signal.Receiver.controller"
				},
				"receive": {
					"facet": "type",
					"type": "string",
					"source": "use.signal.Receiver.receive"
				},
				"process": {
					"facet": "type",
					"type": "string",
					"source": "use.signal.Processor.process"
				},
				"execute": {
					"facet": "type",
					"type": "string",
					"source": "use.signal.Processor.execute"
				},
				"trap": {
					"facet": "type",
					"type": "string",
					"source": "use.signal.Processor.trap"
				},
				"instruction": {
					"type": "object",
					"part": {},
					"constructor": "type"
				}
			},
			"constructor": "super"
		},
		"Service": {
			"type": "object",
			"part": {
				"": {
					"facet": "super",
					"type": "string",
					"source": "Component"
				},
				"use": {
					"type": "object",
					"part": {
						"Message": {
							"facet": "type",
							"type": "string",
							"source": "use.signal.Message"
						}
					},
					"constructor": "type"
				},
				"service": {
					"type": "function",
					"source": "function(receiver, subject, request) {\r\n\t\t\tlet message = this.createMessage(receiver, subject, request);\r\n\t\t\tthis.process(receiver, message);\r\n\t\t}"
				},
				"createMessage": {
					"type": "function",
					"source": "createMessage(receiver, subject, request) {\r\n\t\t\tlet message = this.sys.extend(this.use.Message);\r\n\t\t\tmessage.action = subject;\r\n\t\t\tmessage.request = request;\r\n\t\t\tmessage.status = 0;\r\n\t\t\treturn message;\r\n\t\t}"
				}
			},
			"constructor": "super"
		}
	},
	"constructor": "package"
}