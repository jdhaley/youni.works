<article contenteditable="true" tabindex="1"><h1>Control Framework</h1><p>The base of the framework is defined in base/control.mjs.</p><h2>Control</h2><p>A Control is an Object.&nbsp; It implements the receiver interface by delegating signal processing to their Controller:</p><li>controller: Controller</li><li>receive: (signal)</li><ul><ul><li>this.controller.process(this, signal)</li></ul></ul>A Control also has an iterable part:<br><ul><li>part: @Iterable</li></ul>If the Control/part relationship is undirected, a Control will have a partOf property pointing to its parent:<br><ul><li>partOf: Control</li></ul><h2>Controller</h2><p>A Controller processes signals on behalf of a Control. A Controller is itself a Control and can receive signals.</p><p><ul><li>process: (on, signal)</li><ul><li>Processes the signal for the "on control" argument.&nbsp; Calls execute.</li></ul><li>execute: (on, signal)</li><ul><li>executes an action by calling a method on the control.</li></ul></ul><h2>Processor</h2><p>A Processor is a Controller that defines the actions to be performed on a control.</p></p><li style="margin: 0px; padding: 6px 0px 0px; border: 0px;">execute: (on, signal)</li><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><li style="margin: 0px; padding: 6px 0px 0px; border: 0px;">executes an action by calling an action</li></blockquote><ul><li>action: Record of action functions</li></ul><br><br></article>